<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[追梦人的博客]]></title>
  <subtitle><![CDATA[做懂架构的程序员和写代码的架构师]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="hhttp://dreamer2008.github.io/"/>
  <updated>2016-01-23T14:08:14.000Z</updated>
  <id>hhttp://dreamer2008.github.io/</id>
  
  <author>
    <name><![CDATA[dreamer2008]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[代码设计原则]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/22/tech/architecture/principles-of-design/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/22/tech/architecture/principles-of-design/</id>
    <published>2016-01-22T12:55:24.000Z</published>
    <updated>2016-01-23T14:08:14.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u7B80_u5355_u539F_u5219"><a href="#u7B80_u5355_u539F_u5219" class="headerlink" title="简单原则"></a>简单原则</h3><ul>
<li>避免重复原则（DRY - Don’t repeat yourself）</li>
</ul>
<p>又叫一次且仅一次（once and only once，简称OAOO)。编程的最基本原则是避免重复。在程序代码中总会有很多结构体，如循环、函数、类等等。一旦你重复某个语句或概念，就会很容易形成一个抽象体。</p>
<ul>
<li>抽象原则（Abstraction Principle）</li>
</ul>
<p>与DRY原则相关。要记住，程序代码中每一个重要的功能，只能出现在源代码的一个位置。</p>
<ul>
<li>简单原则（Keep It Simple and Stupid）</li>
</ul>
<p>简单是软件设计的目标，简单的代码占用时间少，漏洞少，并且易于修改。</p>
<ul>
<li>避免创建你不要的代码 Avoid Creating a YAGNI (You aren’t going to need it)</li>
</ul>
<p>除非你需要它，否则别创建新功能。</p>
<ul>
<li>尽可能做可运行的最简单的事（Do the simplest thing that could possibly work）</li>
</ul>
<p>尽可能做可运行的最简单的事。在编程中，一定要保持简单原则。作为一名程序员不断的反思“如何在工作中做到简化呢？”这将有助于在设计中保持简单的路径。</p>
<ul>
<li>别让我思考(Don’t make me think)</li>
</ul>
<p>这是Steve Krug一本书的标题，同时也和编程有关。所编写的代码一定要易于读易于理解，这样别人才会欣赏，也能够给你提出合理化的建议。相反，若是繁杂难解的程序，其他人总是会避而远之的。</p>
<ul>
<li>Rule of three 称为”三次原则”</li>
</ul>
<p>指的是当某个功能第三次出现时，才进行”抽象化”。</p>
<ul>
<li>代码维护(Write Code for the Maintainer)</li>
</ul>
<p>一个优秀的代码，应当使本人或是他人在将来都能够对它继续编写或维护。代码维护时，或许本人会比较容易，但对他人却比较麻烦。因此你写的代码要尽可能保证他人能够容易维护。用书中原话说“如果一个维护者不再继续维护你的代码，很可能他就有想杀了你的冲动。”</p>
<ul>
<li>最小惊讶原则(Principle of least astonishment)</li>
</ul>
<p>最小惊讶原则通常是在用户界面方面引用，但同样适用于编写的代码。代码应该尽可能减少让读者惊喜。也就是说，你编写的代码只需按照项目的要求来编写。其他华丽的功能就不必了，以免弄巧成拙。</p>
<ul>
<li>隐藏实现细节（Hide Implementation Details）</li>
</ul>
<p>隐藏实现细节原则，当其他功能部分发生变化时，能够尽可能降低对其他组件的影响。</p>
<ul>
<li>避免过早优化(Avoid Premature Optimization)</li>
</ul>
<p>除非你的代码运行的比你想像中的要慢，否则别去优化。假如你真的想优化，就必须先想好如何用数据证明，它的速度变快了。<br>“过早的优化是一切罪恶的根源”——Donald Knuth</p>
<ul>
<li>代码重用原则（Code Reuse is Good）</li>
</ul>
<p>重用代码能提高代码的可读性，缩短开发时间。</p>
<ul>
<li>关注点分离（Separation of Concerns）</li>
</ul>
<p>不同领域的功能，应该由不同的代码和最小重迭的模块组成。</p>
<ul>
<li>拥抱改变（Embrace Change）</li>
</ul>
<p>这是Kent Beck一本书的标题，同时也被认为是极限编程和敏捷方法的宗旨。</p>
<p>许多其他原则都是基于这个概念的，即你应该积极面对变化。事实上，一些较老的编程原则如最小化耦合原则都是为了使代码能够容易变化。无论你是否是个极限编程者，基于这个原则去编写代码会让你的工作变得更有意义。</p>
<h3 id="u8BBE_u8BA1_u6A21_u5F0F_u539F_u5219"><a href="#u8BBE_u8BA1_u6A21_u5F0F_u539F_u5219" class="headerlink" title="设计模式原则"></a>设计模式原则</h3><ul>
<li>OCP(Open/Close Principle,开闭原则)</li>
</ul>
<p>你所编写的软件实体（类、模块、函数等）最好是开源的，这样别人可以拓展开发。不过，对于你的代码，得限定别人不得修改。换句话说，别人可以基于你的代码进行拓展编写，但却不能修改你的代码。</p>
<p>开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类。</p>
<ul>
<li>SRP(Single responsibility principle，单一职责原则)</li>
</ul>
<p>一个类，只有一个引起它变化的原因。应该只有一个职责。每一个职责都是变化的一个轴线，如果一个类有一个以上的职责，这些职责就耦合在了一起。这会导致脆弱的设计。当一个职责发生变化时，可能会影响其它的职责。另外，多个职责耦合在一起，会影响复用性。例如：要实现逻辑和界面的分离。</p>
<ul>
<li>LSP(Liskov Substitution Principle LSP,里氏替换原则)</li>
</ul>
<p>面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。<br>LSP是继承复用的基石，只有当衍生类可以替换掉基类，软件单位的功能不受到影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。<br>里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p>
<ul>
<li>DIP（Dependence Inversion Principle,依赖倒置原则）</li>
</ul>
<p>就是要依赖于抽象，不要依赖于具体。简单的说就是要求对抽象进行编程，不要对实现进行编程，这样就降低了客户与实现模块间的耦合。<br>实现开闭原则的关键是抽象化，并且从抽象化导出具体化实现，如果说开闭原则是面向对象设计的目标的话，那么依赖倒转原则就是面向对象设计的主要手段。</p>
<ul>
<li>ISP(Interface Segregation Principle，即接口隔离原则)</li>
</ul>
<p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。还是一个降低类之间的耦合度的意思，从这儿我们看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方便。所以上文中多次出现：降低依赖，降低耦合。</p>
<ul>
<li>CRP(Composite Reuse Principle，合成复用原则)</li>
</ul>
<p>合成复用原则就是指在一个新的对象里通过关联关系（包括组合关系和聚合关系）来使用一些已有的对象，使之成为新对象的一部分；新对象通过委派调用已有对象的方法达到复用其已有功能的目的。简言之：要尽量使用组合/聚合关系，少用继承。</p>
<ul>
<li>迪米特法则(Law of Demeter)<br>又叫最少知道原则(Least Knowledge Principle)。<br>为什么叫最少知道原则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。也就是说一个软件实体应当尽可能少的与其他实体发生相互作用。这样，当一个模块修改时，就会尽量少的影响其他的模块，扩展会相对容易，这是对软件实体之间通信的限制，它要求限制软件实体之间通信的宽度和深度。</li>
</ul>
<p>参考资料：</p>
<ol>
<li><p><a href="http://www.csdn.net/article/2011-07-29/302424" target="_blank" rel="external">优秀程序设计的18大原则</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/b8d10cb19d23" target="_blank" rel="external">代码设计原则</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u7B80_u5355_u539F_u5219"><a href="#u7B80_u5355_u539F_u5219" class="headerlink" title="简单原则"></a>简单原则</h3><ul>
<li>避免重复原则（DRY - Don’t]]>
    </summary>
    
      <category term="architecture" scheme="hhttp://dreamer2008.github.io/tags/architecture/"/>
    
      <category term="tech" scheme="hhttp://dreamer2008.github.io/tags/tech/"/>
    
      <category term="架构" scheme="hhttp://dreamer2008.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python学习笔记（一）]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/tech/languages/python-note/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/tech/languages/python-note/</id>
    <published>2016-01-17T14:05:50.000Z</published>
    <updated>2016-01-27T14:46:13.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://www.kandasoft.com/wp-content/uploads/2014/02/Python-Programming-Language.png" alt="Python"></p>
<h1 id="Python_u5165_u95E8"><a href="#Python_u5165_u95E8" class="headerlink" title="Python入门"></a>Python入门</h1><h2 id="Python_u7B80_u4ECB"><a href="#Python_u7B80_u4ECB" class="headerlink" title="Python简介"></a>Python简介</h2><p>脚本语言。解释语言。默认的解释器CPython。<br>Python之父—荷兰人Guido van Rossum。诞生于1989年。第一个公开发行版发行于1991年</p>
<h2 id="Python_u7528_u9014"><a href="#Python_u7528_u9014" class="headerlink" title="Python用途"></a>Python用途</h2><ol>
<li>是网络应用，包括网站、后台服务等等；</li>
<li>其次是许多日常需要的小工具，包括系统管理员需要的脚本任务等等；</li>
<li>另外就是把其他语言开发的程序再包装起来，方便使用</li>
</ol>
<h2 id="Python_u4F18_u7F3A_u70B9"><a href="#Python_u4F18_u7F3A_u70B9" class="headerlink" title="Python优缺点"></a>Python优缺点</h2><ul>
<li>性能差</li>
<li>源码不能加密</li>
</ul>
<h2 id="Python_2-x_vs_3-x"><a href="#Python_2-x_vs_3-x" class="headerlink" title="Python 2.x vs 3.x"></a>Python 2.x vs 3.x</h2><p>2008年, Python3发布。最大的变化是源码文件默认使用utf-8编码</p>
<ul>
<li>更多区别：<a href="http://www.admin10000.com/document/144.html" target="_blank" rel="external">http://www.admin10000.com/document/144.html</a><h1 id="u7B2C_u4E00_u4E2APython_u7A0B_u5E8F"><a href="#u7B2C_u4E00_u4E2APython_u7A0B_u5E8F" class="headerlink" title="第一个Python程序"></a>第一个Python程序</h1></li>
</ul>
<h1 id="u53C2_u8003_u8D44_u6599"><a href="#u53C2_u8003_u8D44_u6599" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">廖雪峰Python3教程</a></li>
<li><a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="external">Runoob Python3教程</a></li>
<li><a href="http://www.phpxs.com/j/python" target="_blank" rel="external">PHPXS Python基础教程</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://www.kandasoft.com/wp-content/uploads/2014/02/Python-Programming-Language.png" alt="Python"></p>
<h1 id="Python_u5165_u95]]>
    </summary>
    
      <category term="python" scheme="hhttp://dreamer2008.github.io/tags/python/"/>
    
      <category term="Python" scheme="hhttp://dreamer2008.github.io/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[打造个人品牌]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/tech/personal-brand/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/tech/personal-brand/</id>
    <published>2016-01-17T09:42:22.000Z</published>
    <updated>2016-01-24T03:02:48.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u6458_u8981"><a href="#u6458_u8981" class="headerlink" title="摘要"></a>摘要</h1><p>最近几年，“个人品牌”、“个人影响力”逐渐被人提及。然而他们真的那么重要吗？我们又应该如何打造呢？</p>
<h1 id="u6B63_u6587"><a href="#u6B63_u6587" class="headerlink" title="正文"></a>正文</h1><p>首先是一篇泼冷水的文章，发人深省，引以为戒。</p>
<p><a href="http://www.fortunechina.com/career/c/2014-11/11/content_227415.htm" target="_blank" rel="external">打造个人品牌的重要性被高估了</a></p>
<p>其中的摘要，清晰直白地表达了该文作者的观点：</p>
<blockquote>
<p>关键在于先干出成绩，然后再打造个人品牌，否则就是本末倒置。然而，许多创业者把时间都花在面子工程上，结果盛名之下，其实难副。</p>
</blockquote>
<p>不过，虽然如此，其他几篇文章中介绍的方法仍然有参考价值。罗列如下。 </p>
<ul>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=400165803&amp;idx=1&amp;sn=0f0db61d52b5c7b716ea0e071f91e02e&amp;scene=21#wechat_redirect" target="_blank" rel="external">『1024』这个程序员节，聊聊程序员的自我进阶 </a></li>
</ul>
<ul>
<li><p><a href="http://devrel.qiniucdn.com/data/20150821144728/index.html" target="_blank" rel="external">听课总结：打造个人品牌的九个要点</a></p>
</li>
<li><p><a href="https://github.com/phodal/developer/blob/master/entries/impact.md" target="_blank" rel="external">如何提高影响力，为自己代言</a></p>
</li>
<li><p><a href="http://www.infoq.com/cn/news/2014/02/building-programmer-brand" target="_blank" rel="external">打造你自己的程序员品牌</a></p>
</li>
</ul>
<ul>
<li><p><a href="http://4526621.blog.51cto.com/4516621/1718964" target="_blank" rel="external">程序员如何打造个人品牌</a></p>
</li>
<li><p><a href="http://www.admin10000.com/document/6709.html" target="_blank" rel="external">程序员如何经营个人品牌</a></p>
</li>
</ul>
<p>总结下来，有以下几点。</p>
<ul>
<li>应该先干出一定成绩，然后再打造个人品牌，至少不应该急于求成</li>
<li>最好在各个网络平台用同一个ID标示自己。（这个有时候也比较难）</li>
<li>主要途径：<ol>
<li>写博客（包括微博、传统博客、微信公众号等）</li>
<li>写书、做视频、办公开课</li>
<li>做网站、开发APP或者其他软件</li>
<li>发表论文、持有发明、专利</li>
<li>参与开源、参加各种技术交流和分享</li>
<li>参与创业</li>
<li>持续Impact</li>
</ol>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u6458_u8981"><a href="#u6458_u8981" class="headerlink" title="摘要"></a>摘要</h1><p>最近几年，“个人品牌”、“个人影响力”逐渐被人提及。然而他们真的那么重要吗？我们又应该如何打造呢？</p]]>
    </summary>
    
      <category term="tech" scheme="hhttp://dreamer2008.github.io/tags/tech/"/>
    
      <category term="技术" scheme="hhttp://dreamer2008.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[InfoQ文章集]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/tech/infoq/infoq-articles/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/tech/infoq/infoq-articles/</id>
    <published>2016-01-17T03:18:20.000Z</published>
    <updated>2016-01-31T08:09:43.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u8BD1_u6587"><a href="#u8BD1_u6587" class="headerlink" title="译文"></a>译文</h1><h2 id="2016_u5E74"><a href="#2016_u5E74" class="headerlink" title="2016年"></a>2016年</h2><h3 id="1_u6708"><a href="#1_u6708" class="headerlink" title="1月"></a>1月</h3><ul>
<li><p><a href="https://zybuluo.com/dtstudy/note/269716" target="_blank" rel="external">A Pattern for API Backends Serving Frontends</a> 参考阅读：<a href="http://samnewman.io/patterns/architectural/bff/" target="_blank" rel="external">Pattern: Backends For Frontends</a></p>
</li>
<li><p><a href="https://zybuluo.com/dtstudy/note/271763" target="_blank" rel="external">“Dear GitHub…” — An Open Letter to GitHub</a></p>
</li>
<li><p><a href="https://zybuluo.com/dtstudy/note/280367" target="_blank" rel="external">Parse will Shut Down their Service</a> 参考阅读：<a href="http://www.infoq.com/cn/news/2016/01/facebook-is-closing-parse" target="_blank" rel="external">Facebook将关闭其移动开发者平台Parse</a></p>
</li>
</ul>
<h3 id="2_u6708"><a href="#2_u6708" class="headerlink" title="2月"></a>2月</h3><ul>
<li>[The Evolution of Swift’s Standard Library]</li>
</ul>
<h1 id="u4E2D_u6587_u539F_u521B"><a href="#u4E2D_u6587_u539F_u521B" class="headerlink" title="中文原创"></a>中文原创</h1><h2 id="2016_u5E74-1"><a href="#2016_u5E74-1" class="headerlink" title="2016年"></a>2016年</h2><h1 id="Original_in_English"><a href="#Original_in_English" class="headerlink" title="Original in English"></a>Original in English</h1><h2 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h2>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u8BD1_u6587"><a href="#u8BD1_u6587" class="headerlink" title="译文"></a>译文</h1><h2 id="2016_u5E74"><a href="#2016_u5E74" class="header]]>
    </summary>
    
      <category term="BFF" scheme="hhttp://dreamer2008.github.io/tags/BFF/"/>
    
      <category term="InfoQ" scheme="hhttp://dreamer2008.github.io/tags/InfoQ/"/>
    
      <category term="architecture" scheme="hhttp://dreamer2008.github.io/tags/architecture/"/>
    
      <category term="mobile" scheme="hhttp://dreamer2008.github.io/tags/mobile/"/>
    
      <category term="技术" scheme="hhttp://dreamer2008.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[架构师之我见]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/tech/architecture/my-view-on-architecture/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/tech/architecture/my-view-on-architecture/</id>
    <published>2016-01-17T01:41:19.000Z</published>
    <updated>2016-01-17T10:54:14.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/tech/architect.jpg" width="600" height="400" onerror="this.src='http://static.oschina.net/uploads/space/2012/0709/172424_x5hu_28.jpg'"></p>
<h1 id="u4EC0_u4E48_u662F_u8F6F_u4EF6_u67B6_u6784_28Software_Architecture_29"><a href="#u4EC0_u4E48_u662F_u8F6F_u4EF6_u67B6_u6784_28Software_Architecture_29" class="headerlink" title="什么是软件架构(Software Architecture)"></a>什么是软件架构(Software Architecture)</h1><h2 id="u5B9A_u4E49"><a href="#u5B9A_u4E49" class="headerlink" title="定义"></a>定义</h2><blockquote>
<p><strong>软件架构</strong>是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。（原文：(<a href="https://zh.wikipedia.org/wiki/软件架构)）" target="_blank" rel="external">https://zh.wikipedia.org/wiki/软件架构)）</a></p>
</blockquote>
<h2 id="u8D77_u6E90"><a href="#u8D77_u6E90" class="headerlink" title="起源"></a>起源</h2><p>1960年代，Dijkstra（别告诉我你不知道他是谁）等人就已提出这个概念。1990年代以来，由于Rational和Microsoft内部的相关活动，逐渐开始流行起来。</p>
<h1 id="u4EC0_u4E48_u662F_u67B6_u6784_u5E08_28Architect_29"><a href="#u4EC0_u4E48_u662F_u67B6_u6784_u5E08_28Architect_29" class="headerlink" title="什么是架构师(Architect)"></a>什么是架构师(Architect)</h1><h2 id="u7CFB_u7EDF_u67B6_u6784_u5E08_28System_Architect_29"><a href="#u7CFB_u7EDF_u67B6_u6784_u5E08_28System_Architect_29" class="headerlink" title="系统架构师(System Architect)"></a>系统架构师(System Architect)</h2><p>其实，<a href="https://zh.wikipedia.org/wiki/系统架构师" target="_blank" rel="external">系统架构师</a>分为很多种，企业架构师、软件架构师、硬件架构师、网络架构师、解决方案架构师等等。更多请参见：<a href="https://en.wikipedia.org/wiki/Software_architect" target="_blank" rel="external">https://en.wikipedia.org/wiki/Software_architect</a>.</p>
<p>当然本文的重点是关注软件架构师，尤其是互联网软件架构师</p>
<h2 id="u8F6F_u4EF6_u67B6_u6784_u5E08"><a href="#u8F6F_u4EF6_u67B6_u6784_u5E08" class="headerlink" title="软件架构师"></a>软件架构师</h2><p>软件架构师当然就是负责设计上面所说的软件架构的人了。（这不废话嘛。呵呵）</p>
<h1 id="u6211_u5BF9_u67B6_u6784_u5E08_u7684_u7406_u89E3"><a href="#u6211_u5BF9_u67B6_u6784_u5E08_u7684_u7406_u89E3" class="headerlink" title="我对架构师的理解"></a>我对架构师的理解</h1><h2 id="u5DE5_u4F5C_u804C_u8D23"><a href="#u5DE5_u4F5C_u804C_u8D23" class="headerlink" title="工作职责"></a>工作职责</h2><blockquote>
<p>系统架构师，是技术的长期演进的远见，和主持系统各个部分的集成整合。职责是架构可否顺利实施、对核心部分质量的承担和框架搭建。 (原文：<a href="https://zh.wikipedia.org/wiki/系统架构师" target="_blank" rel="external">https://zh.wikipedia.org/wiki/系统架构师</a>)</p>
</blockquote>
<h2 id="u4EFB_u804C_u8981_u6C42"><a href="#u4EFB_u804C_u8981_u6C42" class="headerlink" title="任职要求"></a>任职要求</h2><p>0、架构师要有良好的沟通能力，跟技术团队、产品团队、业务团队等等都有良好的沟通</p>
<p>1、知识、技能方面<br>1）架构师必须是优秀的程序员，必须有足够的设计经验、编程经验（个人认为至少3年，“天才”可以例外）<br>2）架构师需要有广博的知识面，深刻理解各种原理。通晓软硬件、操作系统、网络等各种知识</p>
<p>2、思维方式、能力方面<br>1）抽象思维能力、逻辑推理能力、快速理解产品需求的能力<br>2）全局观、系统性思维<br>系统性思维、要理解整个系统的本质和关键点（重点、难点、容易变化的点、潜在的风险、最大的挑战和瓶颈）<br>3）要有技术前瞻性，要拥抱变化，但不要完美主义<br>不要企图一开始就设计一个完美的架构。优先考虑的应该是用较低的成本满足当前需求，并且保证一定的前瞻性就够了</p>
<p>3、演讲和分享<br>1）多在内部分享，帮助团队提升和成长<br>2）善于走出去，多分享交流，不断为团队注入新鲜血液，同时提升自己的水平和提高个人的影响力</p>
<h1 id="u9996_u5E2D_u67B6_u6784_u5E08_28CAO_2CChief_Architecture_Officer_29"><a href="#u9996_u5E2D_u67B6_u6784_u5E08_28CAO_2CChief_Architecture_Officer_29" class="headerlink" title="首席架构师(CAO,Chief Architecture Officer)"></a>首席架构师(CAO,Chief Architecture Officer)</h1><p>恩。等你先成为一名合格的架构师再说吧。CAO这个缩写也是醉了</p>
<h2 id="u66F4_u591A_u53C2_u8003"><a href="#u66F4_u591A_u53C2_u8003" class="headerlink" title="更多参考"></a>更多参考</h2><p><a href="http://vipnews.csdn.net/newscontent.aspx?pointid=2008_05_30_150239242" target="_blank" rel="external">做人、做事，做架构师——架构师能力模型解析</a></p>
<p><a href="http://www.cnblogs.com/keely/archive/2010/05/24/1742537.html" target="_blank" rel="external">软件架构师的工作</a></p>
<h1 id="u7ED3_u8BED"><a href="#u7ED3_u8BED" class="headerlink" title="结语"></a>结语</h1><p>So, for me, at this moment, I got a long way to go. Fighting!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/tech/architect.jpg" width="600" height="400" onerror="this.src='http://static.oschina.net/uploads/space/2012/0709/17242]]>
    </summary>
    
      <category term="architecture" scheme="hhttp://dreamer2008.github.io/tags/architecture/"/>
    
      <category term="tech" scheme="hhttp://dreamer2008.github.io/tags/tech/"/>
    
      <category term="wikipedia" scheme="hhttp://dreamer2008.github.io/tags/wikipedia/"/>
    
      <category term="架构" scheme="hhttp://dreamer2008.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015年个人总结]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/03/essay/summary_2015/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/03/essay/summary_2015/</id>
    <published>2016-01-03T11:56:29.000Z</published>
    <updated>2016-01-17T03:05:09.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/essay/2016.jpg" width="507" height="338"></p>
<p>2015年对我来说，是不平常的一年。因为我回到了3年前离开的公司 —— 京东商城。希望这是我这辈子唯一的一次”二进宫”。呵呵。</p>
<p>2015年4月份，我离开了Demandforce(an Intuit company)中国团队。坦白讲，我自己感觉被忽悠了。因为面谈的时候说好的SaaS云平台，在我入职半年多以后就被放弃了。看来，被收购的公司，命运从被收购的那一刻就注定不被自己掌握了。既然高大上的SaaS不做了，就只能维护老代码了。从看到代码的第一眼，我就一直惊讶于如此陈旧、垃圾的代码，还能继续存活着，为投资者赚取利润。我也没想到，美国硅谷公司里，也有这么垃圾的代码。业务逻辑，直接写在JSP里面，想必国内的程序员大部分也没见识过。而且，我竟然坚持了两年，简直不是我的个性。</p>
<p>回顾过去的两年，我在技术上，确实没有大的进步。一方面，是因为日常工作中确实没用到牛叉的技术，另一方面，我把业余时间用在了别的事情上，比如英语、吉他、年会唱歌。尤其是英语，我发起了ELP(English Learning Program)，现学现卖，反响很好。从此以后，我也可以张口飚英语了。嘿嘿。</p>
<p>另外，我有幸认识了一些有趣的人。<br><a href="https://cn.linkedin.com/in/yuen-nam-choi-33335838/zh-cn" target="_blank" rel="external">Yuen</a>, a charming lady and professional product manager with amazing personalities, which includes straightness and gentleness. She was the first one that has international background I’ve met. She always smiles to everyone around her and was also very patient and her sense of humor impressed me a lot(although in a US way many times) . I enjoyed working with her in the past two years.</p>
<p>The other guy was <a href="https://cn.linkedin.com/in/helix-guan-00b5b636/zh-cn" target="_blank" rel="external">Helix</a>. He is a System Administrator. But, more importantly, he is very versatile and has diverse hobbies,like,reading different books,playing pingpong and many other games, playing several musical instruments, and speaking several foreign languages in a strange and funny way. I’ve never seen such a kowledgeable man ever before. In a way, he is the ideal version of me. Her negative attitude to overworking also impressed me. (just like <a href="http://coolshell.cn/haoel" target="_blank" rel="external">陈皓</a>。哈哈)</p>
<p>2015年5月，我回到了曾经战斗过的地方-京东POP。三年河东，三年河西。三年之后的今天，早已物是人非。新面孔，新业务，新技术迎面扑来，虽然核心的概念，我仍然了然于胸，但仍然感觉变化好大。到目前为止，POP商品组的大部分系统我都参与过了。其中两个系统，基本上是我独立开发的。但是，显然，在架构设计方面，我还有很长的路要走。希望，在新的一年，能有大的进步，从读书计划开始。</p>
<p>2016年，我最大的希望是，能在技术和职业发展上找到新的突破点，更加快乐地工作、进步、成长！</p>
<p>2016, I’m coming. Onwards and upwards!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/essay/2016.jpg" width="507" height="338"></p>
<p>2015年对我来说，是不平常的一年。因为我回到了3年前离开的公司 —— 京东商城。希望这是我这辈子唯一的一次”二进宫”。呵呵。</p>
<p]]>
    </summary>
    
      <category term="京东" scheme="hhttp://dreamer2008.github.io/tags/%E4%BA%AC%E4%B8%9C/"/>
    
      <category term="总结" scheme="hhttp://dreamer2008.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英语系列简介]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/12/06/english/index/"/>
    <id>hhttp://dreamer2008.github.io/2015/12/06/english/index/</id>
    <published>2015-12-06T09:42:30.000Z</published>
    <updated>2016-01-17T14:59:56.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/english/english.jpg" alt="dreamer"></p>
<p><strong>NOTE:</strong> 本人虽然是理工技术男，但对学习外语特别感兴趣。</p>
<p>英语系列将包括以下几个方面的内容。</p>
<ul>
<li>英语学习方法探讨，包括听说读写译</li>
<li>本人用英语原创或者翻译的资料</li>
<li>其他语言的学习</li>
</ul>
<p>欢迎大家留言和交流，共同学习，共同进步！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/english/english.jpg" alt="dreamer"></p>
<p><strong>NOTE:</strong> 本人虽然是理工技术男，但对学习外语特别感兴趣。</p>
<p>英语系列将包括以下几个方面的内容。</p>
]]>
    </summary>
    
      <category term="English" scheme="hhttp://dreamer2008.github.io/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[互联网巨头]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/20/tech/internet/internet-giants/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/20/tech/internet/internet-giants/</id>
    <published>2015-04-20T13:42:30.000Z</published>
    <updated>2016-01-22T13:24:18.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8"><a href="#u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8" class="headerlink" title="全球10大互联网公司"></a>全球10大互联网公司</h2><p>首先，祝贺大京东成功跻身全球前10互联网公司。而且前10名中，我朝竟然独占4席，可喜可贺。<br>（以市值排序，2015年4月12日）</p>
<p><img src="http://i.imgur.com/JFM2bu7.png" alt="全球10大互联网公司"></p>
<p>更多参考：</p>
<ul>
<li><a href="http://www.56lem.com/news/show-633.html" target="_blank" rel="external">2014全球十大互联网公司</a></li>
<li><a href="http://www.hongjier.cn/news_268.htm" target="_blank" rel="external">世界十大互联网公司中国占四位！</a></li>
<li><a href="http://finance.ifeng.com/a/20140917/13121077_0.shtml" target="_blank" rel="external">盘点全球十大市值最高互联网公司</a></li>
</ul>
<h2 id="GAF_VS_BAT"><a href="#GAF_VS_BAT" class="headerlink" title="GAF VS BAT"></a>GAF VS BAT</h2><p>我还以为是我首创了GAF/GAAF这个缩写，原来早就有了。不过我也算是独立发明的吧。[嘻嘻]</p>
<p>GAF是Google,Amazon,Facebook三大互联网巨头，加上苹果之后算是”<a href="http://archives.guao.hk/posts/eric-schmidts-gang-of-four-google-apple-amazon-and-facebook.html" target="_blank" rel="external">新四大金刚</a>”-GAAF。</p>
<p>GAF和BAT正好一一对应，分别是搜索、电商和社交三大领域的巨头，并且都在建立自己的生态系统，都想扩大自己的势力范围。</p>
<p>更多参考：</p>
<ul>
<li><a href="http://36kr.com/p/102774.html" target="_blank" rel="external">六大生态系统的崛起</a></li>
<li><a href="http://www.zhihu.com/question/27104799" target="_blank" rel="external">知乎上的讨论</a></li>
<li><a href="http://edu.163.com/15/0413/09/AN2QLI4E00294MA1.html" target="_blank" rel="external">巨头前路占卜</a></li>
<li><a href="http://www.csdn.net/article/2013-04-01/2814733-scalability-lessons-from-google-7-compannies" target="_blank" rel="external">7大知名互联网的系统扩展经验</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8"><a href="#u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8" class="headerlink" t]]>
    </summary>
    
      <category term="Internet" scheme="hhttp://dreamer2008.github.io/tags/Internet/"/>
    
      <category term="京东" scheme="hhttp://dreamer2008.github.io/tags/%E4%BA%AC%E4%B8%9C/"/>
    
      <category term="互联网" scheme="hhttp://dreamer2008.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[做现实的理想主义者]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/20/essay/realistic-idealist/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/20/essay/realistic-idealist/</id>
    <published>2015-04-19T16:05:00.000Z</published>
    <updated>2016-01-23T08:34:17.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://www.xjy.cn/wp-content/uploads/2012/08/4b09eac0t7a5ec1a9f402690.jpg" alt=""></p>
<p>— 节选自<a href="http://www.zreading.cn/archives/3178.html" title="做现实的理想主义者" target="_blank" rel="external">做现实的理想主义者</a></p>
<p>世界不属于理想主义者，因为他们懦弱，没有勇气面对真相; </p>
<p>世界也不属于现实主义者，因为他们只是在重复别人的生活。 </p>
<p>世界属于我们这样的现实的理想主义者。因为他们深深的知道，梦想越纯粹，手段就越要现实。</p>
<p>世界越不看好你，你就要越看好自己。环境越冷清，我们就越要笑得怒力！我们就是这样改变世界！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://www.xjy.cn/wp-content/uploads/2012/08/4b09eac0t7a5ec1a9f402690.jpg" alt=""></p>
<p>— 节选自<a href="http://www.zreading.cn/]]>
    </summary>
    
      <category term="essay" scheme="hhttp://dreamer2008.github.io/tags/essay/"/>
    
      <category term="随笔" scheme="hhttp://dreamer2008.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Github Blogging with Hexo]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/19/tech/github/github-blogging-with-hexo/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/19/tech/github/github-blogging-with-hexo/</id>
    <published>2015-04-19T13:42:30.000Z</published>
    <updated>2016-01-16T03:44:06.000Z</updated>
    <content type="html"><![CDATA[<p>  现在github非常火，很多人（包括很多非程序猿）都在上面开博了。推荐一篇文章：<a href="http://zhuanlan.zhihu.com/cnfeat/19743861" target="_blank" rel="external">为什么你要写博客？</a></p>
<p>  工具方面，从基于Ruby的Jekyll，Octopress，到基于Python的Pelican，再到基于Node.js的Hexo。经过试用，我最终选择了Hexo。更多的工具，请看<a href="http://www.tuicool.com/articles/rmyuEnm" target="_blank" rel="external">这里</a>。</p>
<h2 id="Hexo__u7B80_u4ECB"><a href="#Hexo__u7B80_u4ECB" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>  Hexo 出自一个台湾大学生<a href="https://github.com/tommy351" target="_blank" rel="external">tommy351</a>之手（原来我们大中华区也有世界级的编程牛人啊。赞一个！）。<a href="http://hexo.io/" target="_blank" rel="external">这里</a>是官网。</p>
<p>  Hexo是一个快速的、强大的Blog框架，主要是由 Node.js 构建出来的。同时支持多线程生成，上百个文件只需要花数秒中就能生成。</p>
<p>  Hexo还支持GitHub Flavored Markdown 和所有的 Octopress 插件和 高兼容 Jekyll/Octopress。</p>
<h2 id="Hexo__u5B89_u88C5"><a href="#Hexo__u5B89_u88C5" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>  Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。</p>
<ul>
<li><p>安装Git和Node.js</p>
</li>
<li><p>安装和配置Hexo</p>
</li>
<li><p>申请github账号</p>
</li>
<li><p>编写和发布博客</p>
<p>具体可以参考这几篇文章：</p>
</li>
<li><p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/73779eacb494" target="_blank" rel="external">Hexo 3.0 静态博客使用指南</a></p>
</li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><p><a href="http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="external">hexo系列教程</a></p>
<a id="more"></a>
<h2 id="u95EE_u9898_u53CA_u5176_u89E3_u51B3"><a href="#u95EE_u9898_u53CA_u5176_u89E3_u51B3" class="headerlink" title="问题及其解决"></a>问题及其解决</h2><h3 id="npm_install_u8FD0_u884C_u7F13_u6162_u6216_u5931_u8D25"><a href="#npm_install_u8FD0_u884C_u7F13_u6162_u6216_u5931_u8D25" class="headerlink" title="npm install运行缓慢或失败"></a>npm install运行缓慢或失败</h3><p>可以指定国内的镜像网站，请参考<a href="https://cnodejs.org/topic/4f9904f9407edba21468f31e" target="_blank" rel="external">这里</a></p>
<h3 id="u4E2D_u6587_u7684_u652F_u6301_u95EE_u9898"><a href="#u4E2D_u6587_u7684_u652F_u6301_u95EE_u9898" class="headerlink" title="中文的支持问题"></a>中文的支持问题</h3></li>
<li><p>在根目录的_config.yml中配置中文</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存文件的时候，要确保文件是UTF-8编码</p>
<h3 id="u5176_u4ED6_u95EE_u9898"><a href="#u5176_u4ED6_u95EE_u9898" class="headerlink" title="其他问题"></a>其他问题</h3><p>请参考：<a href="http://wp.huangshiyang.com/hexo常见问题解决方案" target="_blank" rel="external">http://wp.huangshiyang.com/hexo常见问题解决方案</a></p>
<h2 id="Hexo_u5E38_u7528_u547D_u4EE4"><a href="#Hexo_u5E38_u7528_u547D_u4EE4" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo n ==  hexo new</span><br><span class="line"></span><br><span class="line">hexo g ==  hexo generate</span><br><span class="line"></span><br><span class="line">hexo d ==  hexo deploy</span><br><span class="line"></span><br><span class="line">hexo s ==  hexo server</span><br></pre></td></tr></table></figure>
<p>其他常用命令，请参考<a href="http://segmentfault.com/a/1190000002632530" target="_blank" rel="external">这里</a>。</p>
<h2 id="github_u57DF_u540D_u7ED1_u5B9A_u95EE_u9898"><a href="#github_u57DF_u540D_u7ED1_u5B9A_u95EE_u9898" class="headerlink" title="github域名绑定问题"></a>github域名绑定问题</h2><p>请参考前面的文章。</p>
<h2 id="Hexo_u7684Theme_uFF08_u4E3B_u9898/_u76AE_u80A4_uFF09"><a href="#Hexo_u7684Theme_uFF08_u4E3B_u9898/_u76AE_u80A4_uFF09" class="headerlink" title="Hexo的Theme（主题/皮肤）"></a>Hexo的Theme（主题/皮肤）</h2><p>定制皮肤需要一定的Web前端基础（HTML/DIV/CSS/JavaScript）。<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">更多主题，总有一款适合你</a>。</p>
<h2 id="Markdown_u8BED_u6CD5"><a href="#Markdown_u8BED_u6CD5" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>.md文件用纯文本软件编辑即可。这里有几个入门教程：</p>
</li>
<li><p><a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a></p>
</li>
<li><p><a href="http://www.oschina.net/news/28122/reasons-we-should-learn-markdown" target="_blank" rel="external">为什么我们要学习 Markdown 的三个理由</a></p>
</li>
<li><p><a href="http://sspai.com/25137" target="_blank" rel="external">认识与入门 Markdown</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">献给写作者的 Markdown</a></p>
</li>
<li><p><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown语法说明</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>  现在github非常火，很多人（包括很多非程序猿）都在上面开博了。推荐一篇文章：<a href="http://zhuanlan.zhihu.com/cnfeat/19743861">为什么你要写博客？</a></p>
<p>  工具方面，从基于Ruby的Jekyll，Octopress，到基于Python的Pelican，再到基于Node.js的Hexo。经过试用，我最终选择了Hexo。更多的工具，请看<a href="http://www.tuicool.com/articles/rmyuEnm">这里</a>。</p>
<h2 id="Hexo__u7B80_u4ECB"><a href="#Hexo__u7B80_u4ECB" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>  Hexo 出自一个台湾大学生<a href="https://github.com/tommy351">tommy351</a>之手（原来我们大中华区也有世界级的编程牛人啊。赞一个！）。<a href="http://hexo.io/">这里</a>是官网。</p>
<p>  Hexo是一个快速的、强大的Blog框架，主要是由 Node.js 构建出来的。同时支持多线程生成，上百个文件只需要花数秒中就能生成。</p>
<p>  Hexo还支持GitHub Flavored Markdown 和所有的 Octopress 插件和 高兼容 Jekyll/Octopress。</p>
<h2 id="Hexo__u5B89_u88C5"><a href="#Hexo__u5B89_u88C5" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>  Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。</p>
<ul>
<li><p>安装Git和Node.js</p>
</li>
<li><p>安装和配置Hexo</p>
</li>
<li><p>申请github账号</p>
</li>
<li><p>编写和发布博客</p>
<p>具体可以参考这几篇文章：</p>
</li>
<li><p><a href="http://www.jianshu.com/p/05289a4bc8b2">如何搭建一个独立博客</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/73779eacb494">Hexo 3.0 静态博客使用指南</a></p>
</li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/">hexo你的博客</a></li>
<li><p><a href="http://zipperary.com/2013/05/28/hexo-guide-2/">hexo系列教程</a></p>]]>
    
    </summary>
    
      <category term="git" scheme="hhttp://dreamer2008.github.io/tags/git/"/>
    
      <category term="github" scheme="hhttp://dreamer2008.github.io/tags/github/"/>
    
      <category term="hexo" scheme="hhttp://dreamer2008.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="hhttp://dreamer2008.github.io/tags/markdown/"/>
    
      <category term="工具" scheme="hhttp://dreamer2008.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git 10岁了！]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/19/tech/tool/git-ten-years/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/19/tech/tool/git-ten-years/</id>
    <published>2015-04-19T12:40:14.000Z</published>
    <updated>2015-12-08T00:52:10.000Z</updated>
    <content type="html"><![CDATA[<p>Git已经10岁了。如果你还没玩git，那就真的out了。</p>
<p><a href="http://www.admin10000.com/document/6162.html" target="_blank" rel="external">原文</a> <a href="http://www.linux.com/news/featured-blogs/185-jennifer-cloer/821541-10-years-of-git-an-interview-with-git-creator-linus-torvalds" target="_blank" rel="external">英文原文</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html" target="_blank" rel="external">Git入门教程</a></p>
<p>PS: Linus大侠也老了，有木有？原来这哥们除了发明了Linux，还“顺带”发明了Git。膜拜ing。。。</p>
<p><img src="http://www.admin10000.com/UploadFiles/Document/201504/09/20150409095125928274.JPG" height="320" width="280"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Git已经10岁了。如果你还没玩git，那就真的out了。</p>
<p><a href="http://www.admin10000.com/document/6162.html" target="_blank" rel="external">原文</a> <a href]]>
    </summary>
    
      <category term="git" scheme="hhttp://dreamer2008.github.io/tags/git/"/>
    
      <category term="互联网" scheme="hhttp://dreamer2008.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/18/misc/hello-world/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/18/misc/hello-world/</id>
    <published>2015-04-18T13:42:30.000Z</published>
    <updated>2016-01-17T15:04:17.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/misc/helloworld.png" alt="hello world"></p>
<p><strong>NOTE:</strong> This is just a default demo. For hexo, please refer to <a href="http://dreamer2008.github.io/2015/04/19/github-blogging-with-hexo/" title="hexo">my blog here</a>.</p>
<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start"><a href="#Quick_Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create_a_new_post"><a href="#Create_a_new_post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files"><a href="#Generate_static_files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites"><a href="#Deploy_to_remote_sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/misc/helloworld.png" alt="hello world"></p>
<p><strong>NOTE:</strong> This is just a default demo. For hexo, please ref]]>
    </summary>
    
      <category term="misc" scheme="hhttp://dreamer2008.github.io/tags/misc/"/>
    
      <category term="其他" scheme="hhttp://dreamer2008.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
