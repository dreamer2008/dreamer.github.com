<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[涛哥的黑板报]]></title>
  <subtitle><![CDATA[关注架构、互联网、人工智能。做更好的自己]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="hhttp://dreamer2008.github.io/"/>
  <updated>2016-11-20T13:16:20.000Z</updated>
  <id>hhttp://dreamer2008.github.io/</id>
  
  <author>
    <name><![CDATA[dev2arch]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[微信公众号推荐]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/11/20/misc/mp/"/>
    <id>hhttp://dreamer2008.github.io/2016/11/20/misc/mp/</id>
    <published>2016-11-20T13:13:24.000Z</published>
    <updated>2016-11-20T13:16:20.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u7EFC_u5408"><a href="#u7EFC_u5408" class="headerlink" title="综合"></a>综合</h3><ul>
<li>InfoQ       (infoqchina)</li>
<li>EGONetworks（egonetworks）</li>
<li>肉饼铺子    （robbinthoughts）</li>
<li>CoolShell   (<a href="http://coolshell.cn/" target="_blank" rel="external">http://coolshell.cn/</a>) 建议每天读几篇</li>
<li>Tim Yang    (<a href="http://timyang.net/" target="_blank" rel="external">http://timyang.net/</a>)  建议每天读几篇</li>
</ul>
<h3 id="u67B6_u6784"><a href="#u67B6_u6784" class="headerlink" title="架构"></a>架构</h3><ul>
<li>高可用架构 （ArchNotes）</li>
<li>聊聊架构   （archtime）</li>
<li>架构师    （JiaGouX）</li>
<li>性能与架构 （yogoup）</li>
<li>开涛的博客  (kaitao-1234567)</li>
</ul>
<h3 id="u7F16_u7A0B_u6280_u672F"><a href="#u7F16_u7A0B_u6280_u672F" class="headerlink" title="编程技术"></a>编程技术</h3><ul>
<li>顶级程序员  (redhadoop)</li>
<li>论码农的自我修养（bit_tiger）</li>
<li>程序人生   （programmer_life）</li>
<li>程序员的那些事（iProgrammer）</li>
<li>程序员日志  （IT_log）</li>
<li>程序视界   （programmer_sight）</li>
<li>码农翻身   （coderising）</li>
<li>ImportNew  (importnew)</li>
</ul>
<h3 id="u6570_u636E_u5E93"><a href="#u6570_u636E_u5E93" class="headerlink" title="数据库"></a>数据库</h3><ul>
<li>数据库开发 （DBDevs）</li>
<li>InsideMySQL (InsideMySQL) </li>
</ul>
<h3 id="u5927_u6570_u636E_u4E0E_u673A_u5668_u5B66_u4E60"><a href="#u5927_u6570_u636E_u4E0E_u673A_u5668_u5B66_u4E60" class="headerlink" title="大数据与机器学习"></a>大数据与机器学习</h3><ul>
<li>大数据杂谈 （BigdataTina2016）</li>
<li>大数据    （hzdashuju）</li>
<li>机器之心  （almosthuman2014）</li>
<li>新智元    （AI_era）</li>
<li>董老师在硅谷 (donglaoshi-123)</li>
</ul>
<h3 id="u79FB_u52A8_u5F00_u53D1"><a href="#u79FB_u52A8_u5F00_u53D1" class="headerlink" title="移动开发"></a>移动开发</h3><ul>
<li>移动开发前线 （bornmobile）</li>
<li>AndroidDeveloper （googdev）</li>
<li>APP架构师         （appjiagou）</li>
<li>iOS开发     (iOSDevTips)</li>
</ul>
<h3 id="IT_u7F51_u7EA2"><a href="#IT_u7F51_u7EA2" class="headerlink" title="IT网红"></a>IT网红</h3><ul>
<li>MacTalk （sagacity-mac）</li>
<li>小道消息  （WebNotes）</li>
<li>嘀嗒嘀嗒  （AngelaTalk）</li>
<li>道哥的黑板报 （taosay）</li>
<li>精进学堂  （zenpark）</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u7EFC_u5408"><a href="#u7EFC_u5408" class="headerlink" title="综合"></a>综合</h3><ul>
<li>InfoQ       (infoqchina)</li>
<li>EGONetworks（]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[简约之美：软件设计之道]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/05/07/tech/dev/code-simplicity/"/>
    <id>hhttp://dreamer2008.github.io/2016/05/07/tech/dev/code-simplicity/</id>
    <published>2016-05-07T12:08:19.000Z</published>
    <updated>2017-02-18T08:43:44.000Z</updated>
    <content type="html"><![CDATA[<p><a alt="简约之美：软件设计之道" href="http://item.jd.com/11151358.html" target="_blank"><img src="http://img13.360buyimg.com/n1/g8/M02/11/05/rBEHZ1DSycYIAAAAAAheBv036AcAADWtQHupY8ACF4e003.jpg"></a></p>
<h1 id="u5F15_u5B50"><a href="#u5F15_u5B50" class="headerlink" title="引子"></a>引子</h1><p>正如译者所言。在软件的生命周期中，往往维护成本&gt;&gt;开发成本。而维护成本又会随着软件复杂度的降低而降低，所有，我们要尽量降低软件的复杂度。</p>
<h1 id="u5185_u5BB9_u7B80_u4ECB"><a href="#u5185_u5BB9_u7B80_u4ECB" class="headerlink" title="内容简介"></a>内容简介</h1><blockquote>
<p>优秀的软件设计简单明了。不过很遗憾，如今的计算机程序基本上都很复杂，恐怕无人能够确切知道所有代码都是怎么运转的。这本简明《简约之美：软件设计之道》旨在帮助读者利用科学规则掌握优秀设计的基础知识，《简约之美：软件设计之道》中给出的法则适用于所有编程语言和软件项目，并且永远有效。</p>
</blockquote>
<h1 id="u7B14_u8BB0"><a href="#u7B14_u8BB0" class="headerlink" title="笔记"></a>笔记</h1><ol>
<li>好程序员和差程序员的区别在于<strong>理解能力</strong>。差劲的程序员不理解自己做的事情</li>
<li>我们学习提高代码质量的全部原因在于，要想改进结果，提高代码质量是最重要的问题</li>
<li>作者将软件设计视为一门科学。软件设计的科学就是为软件做计划、制定决策的科学，它帮助大家制定这类决定：<br>1）程序的代码应当采用什么结构？<br>2）是程序的速度重要，还是程序代码容易阅读重要？<br>3）为满足需求，应该选择哪种编程语言？</li>
<li>软件系统中任何与架构有关的技术决策，以及在开发系统中所做的技术决策，都可以归到“软件设计”的范畴里。</li>
<li>每个写代码的人都是设计师</li>
<li>一个人写出优秀软件的潜力，完全取决于他在多大程度上理解了“帮助其他人”的思想。在做与软件设计有关的决策时，指导法则就是判断能提供什么样的帮助（帮大忙、帮小忙，帮很多人、帮少数人）</li>
<li>设计程序员能尽可能容易开发和维护的软件系统，这样的系统才能为用户提供尽可能多的帮助，而且能持续提供尽可能多的帮助。</li>
<li>软件设计的方程式：D = V / E<br>1）任何一点改变，其可取成都与其价值成正比，与所付出的成本成反比<br>2）价值：包括可能价值和潜在价值<br>3）成本：包括调研的时间+沟通的时间+思考的时间+编码的时间</li>
<li>完整的方程式：  D = (Vn + Vf) / (Ei + Em)<br>1）Vn：当前价值 Vf：未来价值 Ei：实现成本 Em：维护成本<br>2）随着时间的发展，D -&gt; Vf / Em<br>3）相比降低实现成本，降低维护成本更重要。在软件设计科学中，这点非常重要</li>
<li>设计的质量好坏，正比于该系统在未来能持续帮助他人时间的长短</li>
<li>变化定律：程序存在的时间越久，它的某个部分需要变化的可能性就越高</li>
<li>软件设计的三大误区：<br>1）编写不必要的代码<br>不要编写非必需的代码，而且要删除没用的代码<br>2）代码难以修改<br>僵化设计（rigid design）有两大原因：对未来做太多假设，不仔细设计就编码。设计程序时，应当根据你现在确切知道的需求，而不是你认为未来会出现的需求<br>3）过分追求通用</li>
<li>避免以上三大误区：渐进设计和开发，小步快跑</li>
<li>缺陷概率定律：在程序中新增缺陷的可能性与代码修改量成正比</li>
<li>最好的设计，就是能适应外界尽可能多的变化，而软件自身的变化要尽可能少</li>
<li>永远不要“修复”任何东西，除非它真的是问题，而且有证据表明它的存在</li>
<li>理想情况下，任何系统里的任何信息，都应当只存在一次</li>
<li>简洁定律：软件任何一部分的维护难度，正比于该部分的简洁程度</li>
<li>简洁是相对的。简单到啥子都能看懂</li>
<li>保持可读性、一致性，简单的设计</li>
<li>除了新增功能，以下做法也会增加复杂性<br>1）扩展软件用途<br>2）新增程序员<br>3）做无谓的改变<br>4）困于糟糕的技术<br>5）理解错误<br>6）糟糕的设计或不做设计<br>7）重新发明轮子</li>
<li>复杂问题<br>1）大多数麻烦的设计问题，都可以用在纸上画图或写出来的办法找到答案<br>2）如果某个部分太复杂，就将其分解成小任务。。。分而治之<br>3）可以在做新功能的时间做重新设计和简化</li>
<li>推倒重来，需要同时满足以下条件<br>1）已经完成了准确评估，证明重写比重构好<br>2）有足够的时间<br>3）设计水平要比原来高<br>4）完全打算好了设计新系统，在每一步都有用户提供反馈<br>5）有足够的资源，可兼顾维护老系统和开发新系统</li>
<li>测试定律：你对软件行为的了解程度，等于你对它的测试程序</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><a alt="简约之美：软件设计之道" href="http://item.jd.com/11151358.html" target="_blank"><img src="http://img13.360buyimg.com/n1/g8/M02/11/05/rBEHZ1D]]>
    </summary>
    
      <category term="开发" scheme="hhttp://dreamer2008.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="读书" scheme="hhttp://dreamer2008.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="开发" scheme="hhttp://dreamer2008.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[编写可读代码的艺术]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/03/06/tech/dev/readable-code/"/>
    <id>hhttp://dreamer2008.github.io/2016/03/06/tech/dev/readable-code/</id>
    <published>2016-03-06T13:23:33.000Z</published>
    <updated>2017-02-18T08:44:03.000Z</updated>
    <content type="html"><![CDATA[<p><a alt="编写可读代码的艺术" href="http://item.jd.com/11020839.html" target="_blank"><img src="http://img14.360buyimg.com/n1/g5/M00/03/09/rBEDik_Zh6oIAAAAAAD30NgwDhkAAApCAC9qh0AAPfo079.jpg"></a></p>
<h1 id="u5F15_u5B50"><a href="#u5F15_u5B50" class="headerlink" title="引子"></a>引子</h1><p>写代码是程序员的基本功。但是，程序员，你真的会写代码吗？今天，我们不谈什么高大上的“架构”，就谈谈怎么写代码。</p>
<p>作为程序员，你看过、写过、改过、删过的代码可能不计其数。然而，回头想想，真正让你感到赏心悦目、拍手称快的代码又有多少呢？要知道，你读代码的时间远远大于你实际写代码的时间。如果代码可读性不好，你的工作效率肯定会大打折扣。特别是，对于一个团队来说，如果没有良好的、统一的代码规范，协同工作效率必然很受影响，造成不必要的时间浪费。</p>
<p>《Clean Code》的作者Bob大叔认为“在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。” 哈哈。太TM经典了。</p>
<p>书的目录如下： <img src="http://images.cnitblog.com/blog2015/449064/201505/141405470644668.jpg" alt="目录">（图片来源：<a href="http://www.cnblogs.com/xing901022/p/4503286.html" target="_blank" rel="external">xingoo</a>的博客）</p>
<h1 id="u5185_u5BB9_u7B80_u4ECB"><a href="#u5185_u5BB9_u7B80_u4ECB" class="headerlink" title="内容简介"></a>内容简介</h1><blockquote>
<p>细节决定成败，思路清晰、言简意赅的代码让程序员一目了然；而格式凌乱、拖沓冗长的代码让程序员一头雾水。除了可以正确运行以外，优秀的代码必须具备良好的可读性，编写的代码要使其他人能在最短的时间内理解才行。本书旨在强调代码对人的友好性和可读性。</p>
</blockquote>
<h1 id="u53EF_u8BFB_u6027_u4E3A_u4EC0_u4E48_u91CD_u8981"><a href="#u53EF_u8BFB_u6027_u4E3A_u4EC0_u4E48_u91CD_u8981" class="headerlink" title="可读性为什么重要"></a>可读性为什么重要</h1><h2 id="u4E66_u4E2D_u89C2_u70B9"><a href="#u4E66_u4E2D_u89C2_u70B9" class="headerlink" title="书中观点"></a>书中观点</h2><blockquote>
<p>软件成本 = 开发成本 + 维护成本。往往，维护成本&gt;&gt;开发成本。这其中耗费的主要成本就是由于理解代码和修改代码造成的。</p>
<p>——《Structured Design》</p>
</blockquote>
<h2 id="u4E2A_u4EBA_u89C2_u70B9"><a href="#u4E2A_u4EBA_u89C2_u70B9" class="headerlink" title="个人观点"></a>个人观点</h2><blockquote>
<p>可读性永远是第一位的。代码的可读性与效率、架构、易于测试一点也不冲突。<br>代码可读性好、bug少是对程序员的基本要求。</p>
</blockquote>
<h1 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p><strong>本书旨在帮助你把代码写得更好</strong> 。。。我们希望本书对你每天的编程工作有很多帮助，并且希望你把本书推荐给你团队中的每个人。</p>
</blockquote>
<p>本文从命名、注释、代码布局、简化逻辑等方面阐述如何写出可读性高的代码</p>
<h1 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h1><h2 id="u7B2C1_u7AE0__u4EE3_u7801_u5E94_u5F53_u6613_u4E8E_u7406_u89E3"><a href="#u7B2C1_u7AE0__u4EE3_u7801_u5E94_u5F53_u6613_u4E8E_u7406_u89E3" class="headerlink" title="第1章 代码应当易于理解"></a>第1章 代码应当易于理解</h2><blockquote>
<p>可读性基本定理</p>
<p>Code should be written to minimize the time it would take for someone else to understand it.</p>
<p>代码的写法应当使别人理解它所需的时间最小化。</p>
</blockquote>
<h2 id="u7B2C_u4E00_u90E8_u5206__u8868_u9762_u5C42_u6B21_u7684_u6539_u8FDB"><a href="#u7B2C_u4E00_u90E8_u5206__u8868_u9762_u5C42_u6B21_u7684_u6539_u8FDB" class="headerlink" title="第一部分 表面层次的改进"></a>第一部分 表面层次的改进</h2><ol>
<li>一定要让命名可以“自解释”，尽量具体形象。不要随便缩写，可读性比变量长短重要的多（当然也不要太长）</li>
<li>不要用汉语拼音，不要使用有二义性的词，如filter</li>
<li>注意代码的美观：缩进、分段、空格、空行、适当的对齐、顺序的一致性。在团队中，一致的风格比“正确”的风格重要。如，句尾的大括号</li>
<li>好代码&gt;坏代码+好注释。为缺陷加TODO注释。为特殊的地方写注释。写不同层次的注释。行级&lt;方法级&lt;文件级&lt;包级</li>
<li>使用明确、恰当、含义丰富的词精确描述函数的行为。注释中可以给出I/O的例子</li>
</ol>
<h2 id="u7B2C_u4E8C_u90E8_u5206__u7B80_u5316_u5FAA_u73AF_u548C_u903B_u8F91"><a href="#u7B2C_u4E8C_u90E8_u5206__u7B80_u5316_u5FAA_u73AF_u548C_u903B_u8F91" class="headerlink" title="第二部分 简化循环和逻辑"></a>第二部分 简化循环和逻辑</h2><ol>
<li>形式上嵌套一般不超过2层，能return的尽早return。这个原则可以让你大大降低if-else的嵌套深度</li>
<li>不要滥用三目运算符</li>
<li>一定要做参数校验。对于不合法的参数：直接return、抛出异常、logging</li>
<li>拆分过长或者过于复杂的表达式：解释变量、总结变量</li>
<li>减少不必要的变量、合理控制变量的作用域</li>
</ol>
<h2 id="u7B2C_u4E09_u90E8_u5206__u91CD_u65B0_u7EC4_u7EC7_u4EE3_u7801"><a href="#u7B2C_u4E09_u90E8_u5206__u91CD_u65B0_u7EC4_u7EC7_u4EE3_u7801" class="headerlink" title="第三部分 重新组织代码"></a>第三部分 重新组织代码</h2><ol>
<li>抽出不相关的子问题，封装起来。如：各种工具类</li>
<li>将通用代码和项目专有代码分开</li>
<li>一次只做一件事情</li>
<li>用自然语言描述问题，理清思路，能写出更好懂的代码</li>
<li>质疑和拆分你的需求，消除不必要的功能</li>
<li>保持代码库的轻量级，删除无用代码，尽量使用库函数</li>
</ol>
<h2 id="u7B2C_u56DB_u90E8_u5206__u7CBE_u9009_u8BDD_u9898"><a href="#u7B2C_u56DB_u90E8_u5206__u7CBE_u9009_u8BDD_u9898" class="headerlink" title="第四部分 精选话题"></a>第四部分 精选话题</h2><ol>
<li>测试代码的可读性与非测试代码的可读性同样重要</li>
<li>对测试代码的使用者隐去不重要的细节，以便突出更重要的细节</li>
<li>让错误信息具有更好的可读性</li>
<li>又简单又能完成工作的测试值更好</li>
<li>为测试函数起个好的名字。Test<em>类名</em>方法名_情形</li>
<li>过犹不及：</li>
<li>1）牺牲生产代码的可读性，只是为了方便测试</li>
<li>2）顽固地追求100%的测试覆盖率</li>
<li>3）让测试成为产品开发的主导和障碍</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><a alt="编写可读代码的艺术" href="http://item.jd.com/11020839.html" target="_blank"><img src="http://img14.360buyimg.com/n1/g5/M00/03/09/rBEDik_Zh]]>
    </summary>
    
      <category term="开发" scheme="hhttp://dreamer2008.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="读书" scheme="hhttp://dreamer2008.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="开发" scheme="hhttp://dreamer2008.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python学习笔记（一）]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/tech/python/python-note/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/tech/python/python-note/</id>
    <published>2016-01-17T14:05:50.000Z</published>
    <updated>2017-02-18T08:45:07.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://www.kandasoft.com/wp-content/uploads/2014/02/Python-Programming-Language.png" alt="Python"></p>
<h1 id="Python_u5165_u95E8"><a href="#Python_u5165_u95E8" class="headerlink" title="Python入门"></a>Python入门</h1><h2 id="Python_u7B80_u4ECB"><a href="#Python_u7B80_u4ECB" class="headerlink" title="Python简介"></a>Python简介</h2><p>脚本语言。解释语言。默认的解释器CPython。<br>Python之父—荷兰人Guido van Rossum。诞生于1989年。第一个公开发行版发行于1991年</p>
<h2 id="Python_u7528_u9014"><a href="#Python_u7528_u9014" class="headerlink" title="Python用途"></a>Python用途</h2><ol>
<li>是网络应用，包括网站、后台服务等等；</li>
<li>其次是许多日常需要的小工具，包括系统管理员需要的脚本任务等等；</li>
<li>另外就是把其他语言开发的程序再包装起来，方便使用</li>
</ol>
<h2 id="Python_u4F18_u7F3A_u70B9"><a href="#Python_u4F18_u7F3A_u70B9" class="headerlink" title="Python优缺点"></a>Python优缺点</h2><ul>
<li>性能差</li>
<li>源码不能加密</li>
</ul>
<h2 id="Python_2-x_vs_3-x"><a href="#Python_2-x_vs_3-x" class="headerlink" title="Python 2.x vs 3.x"></a>Python 2.x vs 3.x</h2><p>2008年, Python3发布。最大的变化是源码文件默认使用utf-8编码</p>
<ul>
<li>更多区别：<a href="http://www.admin10000.com/document/144.html" target="_blank" rel="external">http://www.admin10000.com/document/144.html</a><h1 id="u7B2C_u4E00_u4E2APython_u7A0B_u5E8F"><a href="#u7B2C_u4E00_u4E2APython_u7A0B_u5E8F" class="headerlink" title="第一个Python程序"></a>第一个Python程序</h1></li>
</ul>
<h1 id="u53C2_u8003_u8D44_u6599"><a href="#u53C2_u8003_u8D44_u6599" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">廖雪峰Python3教程</a></li>
<li><a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="external">Runoob Python3教程</a></li>
<li><a href="http://www.phpxs.com/j/python" target="_blank" rel="external">PHPXS Python基础教程</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://www.kandasoft.com/wp-content/uploads/2014/02/Python-Programming-Language.png" alt="Python"></p>
<h1 id="Python_u5165_u95]]>
    </summary>
    
      <category term="Python" scheme="hhttp://dreamer2008.github.io/tags/Python/"/>
    
      <category term="开发" scheme="hhttp://dreamer2008.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="开发" scheme="hhttp://dreamer2008.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[打造个人品牌]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/influence/personal-brand/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/influence/personal-brand/</id>
    <published>2016-01-17T09:42:22.000Z</published>
    <updated>2017-02-18T08:31:24.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u6458_u8981"><a href="#u6458_u8981" class="headerlink" title="摘要"></a>摘要</h1><p>最近几年，“个人品牌”、“个人影响力”逐渐被人提及。然而他们真的那么重要吗？我们又应该如何打造呢？</p>
<h1 id="u6B63_u6587"><a href="#u6B63_u6587" class="headerlink" title="正文"></a>正文</h1><p>首先是一篇泼冷水的文章，发人深省，引以为戒。</p>
<p><a href="http://www.fortunechina.com/career/c/2014-11/11/content_227415.htm" target="_blank" rel="external">打造个人品牌的重要性被高估了</a></p>
<p>其中的摘要，清晰直白地表达了该文作者的观点：</p>
<blockquote>
<p>关键在于先干出成绩，然后再打造个人品牌，否则就是本末倒置。然而，许多创业者把时间都花在面子工程上，结果盛名之下，其实难副。</p>
</blockquote>
<p>不过，虽然如此，其他几篇文章中介绍的方法仍然有参考价值。罗列如下。 </p>
<ul>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=400165803&amp;idx=1&amp;sn=0f0db61d52b5c7b716ea0e071f91e02e&amp;scene=21#wechat_redirect" target="_blank" rel="external">『1024』这个程序员节，聊聊程序员的自我进阶 </a></li>
</ul>
<ul>
<li><p><a href="http://devrel.qiniucdn.com/data/20150821144728/index.html" target="_blank" rel="external">听课总结：打造个人品牌的九个要点</a></p>
</li>
<li><p><a href="https://github.com/phodal/developer/blob/master/entries/impact.md" target="_blank" rel="external">如何提高影响力，为自己代言</a></p>
</li>
<li><p><a href="http://www.infoq.com/cn/news/2014/02/building-programmer-brand" target="_blank" rel="external">打造你自己的程序员品牌</a></p>
</li>
</ul>
<ul>
<li><p><a href="http://4526621.blog.51cto.com/4516621/1718964" target="_blank" rel="external">程序员如何打造个人品牌</a></p>
</li>
<li><p><a href="http://www.admin10000.com/document/6709.html" target="_blank" rel="external">程序员如何经营个人品牌</a></p>
</li>
</ul>
<p>总结下来，有以下几点。</p>
<ul>
<li>应该先干出一定成绩，然后再打造个人品牌，至少不应该急于求成</li>
<li>最好在各个网络平台用同一个ID标示自己。（这个有时候也比较难）</li>
<li>主要途径：<ol>
<li>写博客（包括微博、传统博客、微信公众号等）</li>
<li>写书、做视频、办公开课</li>
<li>做网站、开发APP或者其他软件</li>
<li>发表论文、持有发明、专利</li>
<li>参与开源、参加各种技术交流和分享</li>
<li>参与创业</li>
<li>持续Impact</li>
</ol>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u6458_u8981"><a href="#u6458_u8981" class="headerlink" title="摘要"></a>摘要</h1><p>最近几年，“个人品牌”、“个人影响力”逐渐被人提及。然而他们真的那么重要吗？我们又应该如何打造呢？</p]]>
    </summary>
    
      <category term="influence" scheme="hhttp://dreamer2008.github.io/tags/influence/"/>
    
      <category term="影响力" scheme="hhttp://dreamer2008.github.io/categories/%E5%BD%B1%E5%93%8D%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[架构师之我见]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/17/tech/architecture/my-view-on-architecture/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/17/tech/architecture/my-view-on-architecture/</id>
    <published>2016-01-17T01:41:19.000Z</published>
    <updated>2017-02-18T08:40:31.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/tech/architect.jpg" width="600" height="400" onerror="this.src='http://static.oschina.net/uploads/space/2012/0709/172424_x5hu_28.jpg'"></p>
<h1 id="u4EC0_u4E48_u662F_u8F6F_u4EF6_u67B6_u6784_28Software_Architecture_29"><a href="#u4EC0_u4E48_u662F_u8F6F_u4EF6_u67B6_u6784_28Software_Architecture_29" class="headerlink" title="什么是软件架构(Software Architecture)"></a>什么是软件架构(Software Architecture)</h1><h2 id="u5B9A_u4E49"><a href="#u5B9A_u4E49" class="headerlink" title="定义"></a>定义</h2><blockquote>
<p><strong>软件架构</strong>是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。（原文：(<a href="https://zh.wikipedia.org/wiki/软件架构)）" target="_blank" rel="external">https://zh.wikipedia.org/wiki/软件架构)）</a></p>
</blockquote>
<h2 id="u8D77_u6E90"><a href="#u8D77_u6E90" class="headerlink" title="起源"></a>起源</h2><p>1960年代，Dijkstra（别告诉我你不知道他是谁）等人就已提出这个概念。1990年代以来，由于Rational和Microsoft内部的相关活动，逐渐开始流行起来。</p>
<h1 id="u4EC0_u4E48_u662F_u67B6_u6784_u5E08_28Architect_29"><a href="#u4EC0_u4E48_u662F_u67B6_u6784_u5E08_28Architect_29" class="headerlink" title="什么是架构师(Architect)"></a>什么是架构师(Architect)</h1><h2 id="u7CFB_u7EDF_u67B6_u6784_u5E08_28System_Architect_29"><a href="#u7CFB_u7EDF_u67B6_u6784_u5E08_28System_Architect_29" class="headerlink" title="系统架构师(System Architect)"></a>系统架构师(System Architect)</h2><p>其实，<a href="https://zh.wikipedia.org/wiki/系统架构师" target="_blank" rel="external">系统架构师</a>分为很多种，企业架构师、软件架构师、硬件架构师、网络架构师、解决方案架构师等等。更多请参见：<a href="https://en.wikipedia.org/wiki/Software_architect" target="_blank" rel="external">https://en.wikipedia.org/wiki/Software_architect</a>.</p>
<p>当然本文的重点是关注软件架构师，尤其是互联网软件架构师</p>
<h2 id="u8F6F_u4EF6_u67B6_u6784_u5E08"><a href="#u8F6F_u4EF6_u67B6_u6784_u5E08" class="headerlink" title="软件架构师"></a>软件架构师</h2><p>软件架构师当然就是负责设计上面所说的软件架构的人。（这不废话嘛。呵呵）</p>
<h1 id="u6211_u5BF9_u67B6_u6784_u5E08_u7684_u7406_u89E3"><a href="#u6211_u5BF9_u67B6_u6784_u5E08_u7684_u7406_u89E3" class="headerlink" title="我对架构师的理解"></a>我对架构师的理解</h1><h2 id="u5DE5_u4F5C_u804C_u8D23"><a href="#u5DE5_u4F5C_u804C_u8D23" class="headerlink" title="工作职责"></a>工作职责</h2><blockquote>
<p>系统架构师，是技术的长期演进的远见，和主持系统各个部分的集成整合。职责是架构可否顺利实施、对核心部分质量的承担和框架搭建。 (原文：<a href="https://zh.wikipedia.org/wiki/系统架构师" target="_blank" rel="external">https://zh.wikipedia.org/wiki/系统架构师</a>)</p>
</blockquote>
<h2 id="u4EFB_u804C_u8981_u6C42"><a href="#u4EFB_u804C_u8981_u6C42" class="headerlink" title="任职要求"></a>任职要求</h2><p>0、架构师要有良好的沟通能力，跟技术团队、产品团队、业务团队等等都有良好的沟通</p>
<p>1、知识、技能方面<br>1）架构师必须是优秀的程序员，必须有足够的设计经验、编程经验（个人认为至少3年，“天才”可以例外）<br>2）架构师需要有广博的知识面，深刻理解各种原理。通晓软硬件、操作系统、网络等各种知识</p>
<p>2、思维方式、能力方面<br>1）抽象思维能力、逻辑推理能力、快速理解产品需求的能力<br>2）全局观、系统性思维<br>系统性思维、要理解整个系统的本质和关键点（重点、难点、容易变化的点、潜在的风险、最大的挑战和瓶颈）<br>3）要有技术前瞻性，要拥抱变化，但不要完美主义<br>不要企图一开始就设计一个完美的架构。优先考虑的应该是用较低的成本满足当前需求，并且保证一定的前瞻性就够了</p>
<p>3、演讲和分享<br>1）多在内部分享，帮助团队提升和成长<br>2）善于走出去，多分享交流，不断为团队注入新鲜血液，同时提升自己的水平和提高个人的影响力</p>
<h1 id="u9996_u5E2D_u67B6_u6784_u5E08_28CAO_2CChief_Architecture_Officer_29"><a href="#u9996_u5E2D_u67B6_u6784_u5E08_28CAO_2CChief_Architecture_Officer_29" class="headerlink" title="首席架构师(CAO,Chief Architecture Officer)"></a>首席架构师(CAO,Chief Architecture Officer)</h1><p>恩。等你先成为一名合格的架构师再说吧。CAO这个缩写也是醉了</p>
<h2 id="u66F4_u591A_u53C2_u8003"><a href="#u66F4_u591A_u53C2_u8003" class="headerlink" title="更多参考"></a>更多参考</h2><p><a href="http://vipnews.csdn.net/newscontent.aspx?pointid=2008_05_30_150239242" target="_blank" rel="external">做人、做事，做架构师——架构师能力模型解析</a></p>
<p><a href="http://www.cnblogs.com/keely/archive/2010/05/24/1742537.html" target="_blank" rel="external">软件架构师的工作</a></p>
<h1 id="u7ED3_u8BED"><a href="#u7ED3_u8BED" class="headerlink" title="结语"></a>结语</h1><p>So, for me, at this moment, I got a long way to go. Fighting!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/tech/architect.jpg" width="600" height="400" onerror="this.src='http://static.oschina.net/uploads/space/2012/0709/17242]]>
    </summary>
    
      <category term="OOD" scheme="hhttp://dreamer2008.github.io/tags/OOD/"/>
    
      <category term="architecture" scheme="hhttp://dreamer2008.github.io/tags/architecture/"/>
    
      <category term="架构" scheme="hhttp://dreamer2008.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015年个人总结]]></title>
    <link href="hhttp://dreamer2008.github.io/2016/01/03/essay/summary_2015/"/>
    <id>hhttp://dreamer2008.github.io/2016/01/03/essay/summary_2015/</id>
    <published>2016-01-03T11:56:29.000Z</published>
    <updated>2017-02-18T08:27:01.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/essay/2016.jpg" width="507" height="338"></p>
<p>2015年对我来说，是不平常的一年。因为我回到了3年前离开的公司 —— 京东商城。希望这是我这辈子唯一的一次”二进宫”。呵呵。</p>
<p>回顾过去的三年，我在技术上，并没有质的飞跃。一方面，是因为日常工作中确实没用到牛叉的技术，另一方面，我把业余时间用在了别的事情上，比如英语、吉他、年会唱歌。尤其是英语，我发起了ELP(English Learning Program)，现学现卖，反响很好。从此以后，我也可以张口飚英语了。嘿嘿。</p>
<p>另外，我有幸认识了一些有趣的人。<br><a href="https://cn.linkedin.com/in/yuen-nam-choi-33335838/zh-cn" target="_blank" rel="external">Yuen</a>, a charming lady and professional product manager with amazing personalities, which includes straightness and gentleness. She was the first one that has international background I’ve met. She always smiles to everyone around her and was also very patient and her sense of humor impressed me a lot(although in a US way many times) . I enjoyed working with her in the past two years.</p>
<p>The other guy was <a href="https://cn.linkedin.com/in/helix-guan-00b5b636/zh-cn" target="_blank" rel="external">Helix</a>. He is a System Administrator. But, more importantly, he is very versatile and has diverse hobbies,like,reading different books,playing pingpong and many other games, playing several musical instruments, and speaking several foreign languages in a strange and funny way. I’ve never seen such a kowledgeable man ever before. In a way, he is the ideal version of me. Her negative attitude to overworking also impressed me. (just like <a href="http://coolshell.cn/haoel" target="_blank" rel="external">陈皓</a>。哈哈)</p>
<p>2015年5月，我回到了曾经战斗过的地方-京东POP。三年河东，三年河西。三年之后的今天，早已物是人非。新面孔，新业务，新技术迎面扑来，变化很大。到目前为止，POP商品组的大部分系统我都参与过了。其中两个系统，基本上是我独立开发的。但是，显然，在架构设计方面，我还有很多需要学习的东西。希望，在新的一年，能有新的进步，从读书计划开始。</p>
<p>2016年，我最大的希望是，能在技术和职业发展上找到新的突破点，更加快乐地工作、进步、成长！</p>
<p>2016, I’m coming. Onwards and upwards!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/essay/2016.jpg" width="507" height="338"></p>
<p>2015年对我来说，是不平常的一年。因为我回到了3年前离开的公司 —— 京东商城。希望这是我这辈子唯一的一次”二进宫”。呵呵。</p>
<p]]>
    </summary>
    
      <category term="京东" scheme="hhttp://dreamer2008.github.io/tags/%E4%BA%AC%E4%B8%9C/"/>
    
      <category term="随笔" scheme="hhttp://dreamer2008.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英语系列简介]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/12/06/english/index/"/>
    <id>hhttp://dreamer2008.github.io/2015/12/06/english/index/</id>
    <published>2015-12-06T09:42:30.000Z</published>
    <updated>2016-01-17T14:59:56.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/english/english.jpg" alt="dreamer"></p>
<p><strong>NOTE:</strong> 本人虽然是理工技术男，但对学习外语特别感兴趣。</p>
<p>英语系列将包括以下几个方面的内容。</p>
<ul>
<li>英语学习方法探讨，包括听说读写译</li>
<li>本人用英语原创或者翻译的资料</li>
<li>其他语言的学习</li>
</ul>
<p>欢迎大家留言和交流，共同学习，共同进步！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/english/english.jpg" alt="dreamer"></p>
<p><strong>NOTE:</strong> 本人虽然是理工技术男，但对学习外语特别感兴趣。</p>
<p>英语系列将包括以下几个方面的内容。</p>
]]>
    </summary>
    
      <category term="English" scheme="hhttp://dreamer2008.github.io/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[互联网巨头]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/20/misc/internet-giants/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/20/misc/internet-giants/</id>
    <published>2015-04-20T13:42:30.000Z</published>
    <updated>2017-02-18T08:32:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8"><a href="#u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8" class="headerlink" title="全球10大互联网公司"></a>全球10大互联网公司</h2><p>首先，祝贺大京东成功跻身全球前10互联网公司。而且前10名中，我朝竟然独占4席，可喜可贺。<br>（以市值排序，2015年4月12日）</p>
<p><img src="http://i.imgur.com/JFM2bu7.png" alt="全球10大互联网公司"></p>
<p>更多参考：</p>
<ul>
<li><a href="http://www.56lem.com/news/show-633.html" target="_blank" rel="external">2014全球十大互联网公司</a></li>
<li><a href="http://www.hongjier.cn/news_268.htm" target="_blank" rel="external">世界十大互联网公司中国占四位！</a></li>
<li><a href="http://finance.ifeng.com/a/20140917/13121077_0.shtml" target="_blank" rel="external">盘点全球十大市值最高互联网公司</a></li>
</ul>
<h2 id="GAF_VS_BAT"><a href="#GAF_VS_BAT" class="headerlink" title="GAF VS BAT"></a>GAF VS BAT</h2><p>我还以为是我首创了GAF/GAAF这个缩写，原来早就有了。不过我也算是独立发明的吧。[嘻嘻]</p>
<p>GAF是Google,Amazon,Facebook三大互联网巨头，加上苹果之后算是”<a href="http://archives.guao.hk/posts/eric-schmidts-gang-of-four-google-apple-amazon-and-facebook.html" target="_blank" rel="external">新四大金刚</a>”-GAAF。</p>
<p>GAF和BAT正好一一对应，分别是搜索、电商和社交三大领域的巨头，并且都在建立自己的生态系统，都想扩大自己的势力范围。</p>
<p>更多参考：</p>
<ul>
<li><a href="http://36kr.com/p/102774.html" target="_blank" rel="external">六大生态系统的崛起</a></li>
<li><a href="http://www.zhihu.com/question/27104799" target="_blank" rel="external">知乎上的讨论</a></li>
<li><a href="http://edu.163.com/15/0413/09/AN2QLI4E00294MA1.html" target="_blank" rel="external">巨头前路占卜</a></li>
<li><a href="http://www.csdn.net/article/2013-04-01/2814733-scalability-lessons-from-google-7-compannies" target="_blank" rel="external">7大知名互联网的系统扩展经验</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8"><a href="#u5168_u740310_u5927_u4E92_u8054_u7F51_u516C_u53F8" class="headerlink" t]]>
    </summary>
    
      <category term="京东" scheme="hhttp://dreamer2008.github.io/tags/%E4%BA%AC%E4%B8%9C/"/>
    
      <category term="其他" scheme="hhttp://dreamer2008.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[做现实的理想主义者]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/20/essay/realistic-idealist/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/20/essay/realistic-idealist/</id>
    <published>2015-04-19T16:05:00.000Z</published>
    <updated>2016-01-23T08:34:17.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://www.xjy.cn/wp-content/uploads/2012/08/4b09eac0t7a5ec1a9f402690.jpg" alt=""></p>
<p>— 节选自<a href="http://www.zreading.cn/archives/3178.html" title="做现实的理想主义者" target="_blank" rel="external">做现实的理想主义者</a></p>
<p>世界不属于理想主义者，因为他们懦弱，没有勇气面对真相; </p>
<p>世界也不属于现实主义者，因为他们只是在重复别人的生活。 </p>
<p>世界属于我们这样的现实的理想主义者。因为他们深深的知道，梦想越纯粹，手段就越要现实。</p>
<p>世界越不看好你，你就要越看好自己。环境越冷清，我们就越要笑得怒力！我们就是这样改变世界！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://www.xjy.cn/wp-content/uploads/2012/08/4b09eac0t7a5ec1a9f402690.jpg" alt=""></p>
<p>— 节选自<a href="http://www.zreading.cn/]]>
    </summary>
    
      <category term="essay" scheme="hhttp://dreamer2008.github.io/tags/essay/"/>
    
      <category term="随笔" scheme="hhttp://dreamer2008.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Github Blogging with Hexo]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/19/influence/github-blogging-with-hexo/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/19/influence/github-blogging-with-hexo/</id>
    <published>2015-04-19T13:42:30.000Z</published>
    <updated>2017-02-18T08:48:28.000Z</updated>
    <content type="html"><![CDATA[<p>  现在github非常火，很多人（包括很多爱写作的非程序猿）都在上面开博了。推荐两篇文章：</p>
<ul>
<li><p><a href="http://zhuanlan.zhihu.com/cnfeat/19743861" target="_blank" rel="external">为什么你要写博客？</a></p>
</li>
<li><p><a href="http://stormzhang.com/android/2016/03/04/why-i-keep-writing-blog/" target="_blank" rel="external">我为什么坚持写博客？</a></p>
</li>
</ul>
<p>  工具方面，从基于Ruby的Jekyll，Octopress，到基于Python的Pelican，再到基于Node.js的Hexo。经过试用，我最终选择了Hexo。更多的工具，请看<a href="http://www.tuicool.com/articles/rmyuEnm" target="_blank" rel="external">这里</a>。</p>
<h2 id="Hexo__u7B80_u4ECB"><a href="#Hexo__u7B80_u4ECB" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>  <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>出自一个台湾大学生<a href="https://github.com/tommy351" target="_blank" rel="external">tommy351</a>之手（原来我们大中华区也有世界级的编程牛人啊。赞一个！）。</p>
<p>  Hexo是一个快速的、强大的Blog框架，主要是由 Node.js 构建出来的。同时支持多线程生成，上百个文件只需要花数秒中就能生成。</p>
<p>  Hexo还支持GitHub Flavored Markdown 和所有的 Octopress 插件和 高兼容 Jekyll/Octopress。</p>
<h2 id="Hexo__u5B89_u88C5"><a href="#Hexo__u5B89_u88C5" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>  Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。</p>
<ul>
<li><p>安装Git和Node.js</p>
</li>
<li><p>安装和配置Hexo</p>
</li>
<li><p>申请github账号</p>
</li>
<li><p>编写和发布博客</p>
<p>具体可以参考这几篇文章：</p>
</li>
<li><p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/73779eacb494" target="_blank" rel="external">Hexo 3.0 静态博客使用指南</a></p>
</li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><p><a href="http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="external">hexo系列教程</a></p>
<a id="more"></a>
<h2 id="u95EE_u9898_u53CA_u5176_u89E3_u51B3"><a href="#u95EE_u9898_u53CA_u5176_u89E3_u51B3" class="headerlink" title="问题及其解决"></a>问题及其解决</h2><h3 id="npm_install_u8FD0_u884C_u7F13_u6162_u6216_u5931_u8D25"><a href="#npm_install_u8FD0_u884C_u7F13_u6162_u6216_u5931_u8D25" class="headerlink" title="npm install运行缓慢或失败"></a>npm install运行缓慢或失败</h3><p>可以指定国内的镜像网站，请参考<a href="https://cnodejs.org/topic/4f9904f9407edba21468f31e" target="_blank" rel="external">这里</a></p>
<h3 id="u4E2D_u6587_u7684_u652F_u6301_u95EE_u9898"><a href="#u4E2D_u6587_u7684_u652F_u6301_u95EE_u9898" class="headerlink" title="中文的支持问题"></a>中文的支持问题</h3></li>
<li><p>在根目录的_config.yml中配置中文</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存文件的时候，要确保文件是UTF-8编码</p>
<h3 id="u5176_u4ED6_u95EE_u9898"><a href="#u5176_u4ED6_u95EE_u9898" class="headerlink" title="其他问题"></a>其他问题</h3><p>请参考：<a href="http://wp.huangshiyang.com/hexo常见问题解决方案" target="_blank" rel="external">http://wp.huangshiyang.com/hexo常见问题解决方案</a></p>
<h2 id="Hexo_u5E38_u7528_u547D_u4EE4"><a href="#Hexo_u5E38_u7528_u547D_u4EE4" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo n ==  hexo new</span><br><span class="line"></span><br><span class="line">hexo g ==  hexo generate</span><br><span class="line"></span><br><span class="line">hexo d ==  hexo deploy</span><br><span class="line"></span><br><span class="line">hexo s ==  hexo server</span><br></pre></td></tr></table></figure>
<p>其他常用命令，请参考<a href="http://segmentfault.com/a/1190000002632530" target="_blank" rel="external">这里</a>。</p>
<h2 id="github_u57DF_u540D_u7ED1_u5B9A_u95EE_u9898"><a href="#github_u57DF_u540D_u7ED1_u5B9A_u95EE_u9898" class="headerlink" title="github域名绑定问题"></a>github域名绑定问题</h2><p>请参考前面的文章。</p>
<h2 id="Hexo_u7684Theme_uFF08_u4E3B_u9898/_u76AE_u80A4_uFF09"><a href="#Hexo_u7684Theme_uFF08_u4E3B_u9898/_u76AE_u80A4_uFF09" class="headerlink" title="Hexo的Theme（主题/皮肤）"></a>Hexo的Theme（主题/皮肤）</h2><p>定制皮肤需要一定的Web前端基础（HTML/DIV/CSS/JavaScript）。<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">更多主题，总有一款适合你</a>。</p>
<h2 id="Markdown_u8BED_u6CD5"><a href="#Markdown_u8BED_u6CD5" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>.md文件用纯文本软件编辑即可。这里有几个入门教程：</p>
</li>
<li><p><a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a></p>
</li>
<li><p><a href="http://www.oschina.net/news/28122/reasons-we-should-learn-markdown" target="_blank" rel="external">为什么我们要学习 Markdown 的三个理由</a></p>
</li>
<li><p><a href="http://sspai.com/25137" target="_blank" rel="external">认识与入门 Markdown</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">献给写作者的 Markdown</a></p>
</li>
<li><p><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown语法说明</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>  现在github非常火，很多人（包括很多爱写作的非程序猿）都在上面开博了。推荐两篇文章：</p>
<ul>
<li><p><a href="http://zhuanlan.zhihu.com/cnfeat/19743861">为什么你要写博客？</a></p>
</li>
<li><p><a href="http://stormzhang.com/android/2016/03/04/why-i-keep-writing-blog/">我为什么坚持写博客？</a></p>
</li>
</ul>
<p>  工具方面，从基于Ruby的Jekyll，Octopress，到基于Python的Pelican，再到基于Node.js的Hexo。经过试用，我最终选择了Hexo。更多的工具，请看<a href="http://www.tuicool.com/articles/rmyuEnm">这里</a>。</p>
<h2 id="Hexo__u7B80_u4ECB"><a href="#Hexo__u7B80_u4ECB" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>  <a href="http://hexo.io/">Hexo</a>出自一个台湾大学生<a href="https://github.com/tommy351">tommy351</a>之手（原来我们大中华区也有世界级的编程牛人啊。赞一个！）。</p>
<p>  Hexo是一个快速的、强大的Blog框架，主要是由 Node.js 构建出来的。同时支持多线程生成，上百个文件只需要花数秒中就能生成。</p>
<p>  Hexo还支持GitHub Flavored Markdown 和所有的 Octopress 插件和 高兼容 Jekyll/Octopress。</p>
<h2 id="Hexo__u5B89_u88C5"><a href="#Hexo__u5B89_u88C5" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>  Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。</p>
<ul>
<li><p>安装Git和Node.js</p>
</li>
<li><p>安装和配置Hexo</p>
</li>
<li><p>申请github账号</p>
</li>
<li><p>编写和发布博客</p>
<p>具体可以参考这几篇文章：</p>
</li>
<li><p><a href="http://www.jianshu.com/p/05289a4bc8b2">如何搭建一个独立博客</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/73779eacb494">Hexo 3.0 静态博客使用指南</a></p>
</li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/">hexo你的博客</a></li>
<li><p><a href="http://zipperary.com/2013/05/28/hexo-guide-2/">hexo系列教程</a></p>]]>
    
    </summary>
    
      <category term="git" scheme="hhttp://dreamer2008.github.io/tags/git/"/>
    
      <category term="github" scheme="hhttp://dreamer2008.github.io/tags/github/"/>
    
      <category term="hexo" scheme="hhttp://dreamer2008.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="hhttp://dreamer2008.github.io/tags/markdown/"/>
    
      <category term="影响力" scheme="hhttp://dreamer2008.github.io/categories/%E5%BD%B1%E5%93%8D%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git 10岁了！]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/19/tech/tool/git-ten-years/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/19/tech/tool/git-ten-years/</id>
    <published>2015-04-19T12:40:14.000Z</published>
    <updated>2017-02-18T08:45:33.000Z</updated>
    <content type="html"><![CDATA[<p>Git已经10岁了。如果你还没玩git，那就真的out了。</p>
<p><a href="http://www.admin10000.com/document/6162.html" target="_blank" rel="external">原文</a> <a href="http://www.linux.com/news/featured-blogs/185-jennifer-cloer/821541-10-years-of-git-an-interview-with-git-creator-linus-torvalds" target="_blank" rel="external">英文原文</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html" target="_blank" rel="external">Git入门教程</a></p>
<p>PS: Linus大侠也老了，有木有？原来这哥们除了发明了Linux，还“顺带”发明了Git。膜拜ing。。。</p>
<p><img src="http://www.admin10000.com/UploadFiles/Document/201504/09/20150409095125928274.JPG" height="320" width="280"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Git已经10岁了。如果你还没玩git，那就真的out了。</p>
<p><a href="http://www.admin10000.com/document/6162.html" target="_blank" rel="external">原文</a> <a href]]>
    </summary>
    
      <category term="git" scheme="hhttp://dreamer2008.github.io/tags/git/"/>
    
      <category term="工具" scheme="hhttp://dreamer2008.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="工具" scheme="hhttp://dreamer2008.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="hhttp://dreamer2008.github.io/2015/04/18/misc/hello-world/"/>
    <id>hhttp://dreamer2008.github.io/2015/04/18/misc/hello-world/</id>
    <published>2015-04-18T13:42:30.000Z</published>
    <updated>2016-01-17T15:04:17.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/misc/helloworld.png" alt="hello world"></p>
<p><strong>NOTE:</strong> This is just a default demo. For hexo, please refer to <a href="http://dreamer2008.github.io/2015/04/19/github-blogging-with-hexo/" title="hexo">my blog here</a>.</p>
<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start"><a href="#Quick_Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create_a_new_post"><a href="#Create_a_new_post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files"><a href="#Generate_static_files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites"><a href="#Deploy_to_remote_sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/misc/helloworld.png" alt="hello world"></p>
<p><strong>NOTE:</strong> This is just a default demo. For hexo, please ref]]>
    </summary>
    
      <category term="misc" scheme="hhttp://dreamer2008.github.io/tags/misc/"/>
    
      <category term="其他" scheme="hhttp://dreamer2008.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
